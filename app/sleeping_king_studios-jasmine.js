// Generated by CoffeeScript 1.8.0
(function() {
  // Compiled from src/sleeping_king_studios/jasmine.coffee
  var SleepingKingStudios, _;

  _ = require('underscore');

  SleepingKingStudios = require('./sleeping_king_studios');

  SleepingKingStudios.Jasmine = {};

  // Compiled from src/sleeping_king_studios/jasmine/context.coffee
  SleepingKingStudios.Jasmine._originalEnv = jasmine.Env;

  SleepingKingStudios.Jasmine.Context = {
    context: describe,
    fcontext: fdescribe,
    xcontext: xdescribe
  };

  _.extend(jasmine.currentEnv_, SleepingKingStudios.Jasmine.Context);

  jasmine.Env = function() {
    return _.extend(new SleepingKingStudios.Jasmine._originalEnv(), SleepingKingStudios.Jasmine.Context);
  };

  // Compiled from src/sleeping_king_studios/jasmine/matchers.coffee
  SleepingKingStudios.Jasmine.Matchers = {};

  // Compiled from src/sleeping_king_studios/jasmine/matchers/respond_to_matcher.coffee
  SleepingKingStudios.Jasmine.Matchers.RespondToMatcher = function(util, customEqualityTesters) {
    return {
      compare: function(actual, expected) {
        var char, type;
        type = typeof actual[expected];
        if ('function' === typeof actual[expected]) {
          return {
            pass: true,
            message: "Expected #" + expected + " not to be a function"
          };
        } else {
          if (!(type === 'undefined' || type === 'null')) {
            char = type.toLowerCase().slice(0, 1);
            if (char === 'a' || char === 'e' || char === 'i' || char === 'o' || char === 'u') {
              type = "an " + type;
            } else {
              type = "a " + type;
            }
          }
          return {
            pass: false,
            message: "Expected #" + expected + " to be a function, but was " + type
          };
        }
      }
    };
  };

  beforeEach(function() {
    return jasmine.addMatchers({
      toRespondTo: SleepingKingStudios.Jasmine.Matchers.RespondToMatcher
    });
  });

  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      module.exports = SleepingKingStudios.Jasmine;
    }
    exports = SleepingKingStudios.Jasmine;
  } else {
    this.SleepingKingStudios = SleepingKingStudios;
  }
}).call(this);
